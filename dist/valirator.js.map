{"version":3,"file":"valirator.js","sources":["../lib/utils.js","../lib/rules/divisibleByRule.js","../lib/rules/enumRule.js","../lib/rules/formatRule.js","../lib/storage.js","../lib/rules/matchToRule.js","../lib/rules/matchToPropertyRule.js","../lib/rules/notMatchToRule.js","../lib/rules/notMatchToPropertiesRule.js","../lib/rules/maxRule.js","../lib/rules/maxItemsRule.js","../lib/rules/maxLengthRule.js","../lib/rules/exclusiveMaxRule.js","../lib/rules/minRule.js","../lib/rules/minItemsRule.js","../lib/rules/minLengthRule.js","../lib/rules/exclusiveMinRule.js","../lib/rules/patternRule.js","../lib/rules/requiredRule.js","../lib/rules/typeRule.js","../lib/rules/uniqueItemsRule.js","../lib/validationResult.js","../lib/core.js","../lib/validationSchema.js","../lib/libs/angular.js","../lib/libs/redux-form.js"],"sourcesContent":["/**\n * @description\n * Empty function\n */\nexport function noop() {\n}\n\n/**\n * @description\n * Check if type\n *\n * @param obj\n * @param {string} typeStr - type string like: '[object Object]', '[object Array]' and etc\n * @returns {boolean}\n */\nexport function isType(obj, typeStr) {\n  return (Object.prototype.toString.call(obj) === typeStr);\n}\n\n/**\n * @description\n * Check if is Object\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isObject(obj) {\n  return isType(obj, '[object Object]');\n}\n\n/**\n * @description\n * Check if is Array\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isArray(obj) {\n  return isType(obj, '[object Array]');\n}\n\n/**\n * @description\n * Check if is Function\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isFunction(obj) {\n  return isType(obj, '[object Function]');\n}\n\n/**\n * @description\n * Check if is String\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isString(obj) {\n  return isType(obj, '[object String]');\n}\n\n/**\n * @description\n * Check if is Date\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isDate(obj) {\n  return isType(obj, '[object Date]');\n}\n\n/**\n * @description\n * Check if is Number\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isNumber(obj) {\n  return isType(obj, '[object Number]') && !isNaN(obj);\n}\n\n/**\n * @description\n * Check if is Boolean\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isBoolean(obj) {\n  return isType(obj, '[object Boolean]');\n}\n\n/**\n * @description\n * Check if is Empty\n * Empty string -> true\n * Empty array -> true\n * Empty object -> true\n *\n * Anything else -> false\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isEmpty(obj) {\n  return obj === '' || (isArray(obj) && obj.length === 0) || (isObject(obj) && Object.keys(obj).length === 0);\n}\n\n/**\n * @description\n * Check if is Null\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isNull(obj) {\n  return isType(obj, '[object Null]');\n}\n\n/**\n * @description\n * Check if is Undefined\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isUndefined(obj) {\n  return isType(obj, '[object Undefined]');\n}\n\n/**\n * @description\n * Check is is Null or Undefined\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isNullOrUndefined(obj) {\n  return isNull(obj) || isUndefined(obj);\n}\n\n/**\n * @description\n * Check is object is defined (not null, not undefined, not empty string, object or array\n *\n * @param obj\n * @returns {boolean}\n */\nexport function isDefined(obj) {\n  return !(isNullOrUndefined(obj) || isEmpty(obj));\n}\n\n/**\n * @description\n * Safe convert to String\n *\n * @param obj\n * @returns {string}\n */\nexport function toString(obj) {\n  return String(obj);\n}\n\n/**\n * @description\n * Safe indexOf\n *\n * @param array\n * @param value\n * @returns {Number}\n */\nexport function indexOf(array, value) {\n  if (!isArray(array)) {\n    return -1;\n  }\n\n  return array.indexOf(value);\n}\n\n/**\n * @description\n * Safe check if value in array\n *\n * @param array\n * @param value\n * @returns {boolean}\n */\nexport function inArray(array, value) {\n  return isArray(array) && indexOf(array, value) !== -1;\n}\n\n/**\n * @description\n * Cast item to array\n *\n * @param array\n * @returns {Array}\n */\nexport function castArray(array) {\n  return isArray(array) ? array : [array];\n}\n\n/**\n * @description\n * Safe check is object has property\n *\n * @param obj\n * @param {string} prop - property name\n * @returns {boolean}\n */\nexport function hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\n/**\n * @description\n * Safe set prototype\n *\n * @param obj\n * @param proto\n * @returns {Object}\n */\nexport function setPrototypeOf(obj, proto) {\n  if (Object.setPrototypeOf) {\n    return Object.setPrototypeOf(obj, proto);\n  }\n\n  obj.__proto__ = proto;\n\n  return obj;\n}\n\n/**\n * @description\n * Safe get prototype\n *\n * @param obj\n * @returns {*}\n */\nexport function getPrototypeOf(obj) {\n  if (Object.getPrototypeOf) {\n    return Object.getPrototypeOf(obj);\n  }\n\n  return obj.__proto__;\n}\n\n/**\n * @description\n * Get property value\n *\n * @param {Object} obj\n * @param {string} path\n * @param fallback - fallback value\n * @returns {*}\n */\nexport function getProperty(obj, path = '', fallback = null) {\n  let result = obj;\n  let prop = toString(path);\n\n  if (path === '') {\n    return result;\n  }\n\n  if (!isDefined(obj)) {\n    return fallback;\n  }\n\n  do {\n    if (isObject(result) && hasOwnProperty(result, prop)) {\n      return result[prop];\n    } else {\n      const [first, ...rest] = prop.split('.');\n\n      result = result[first];\n      prop = rest.join('.');\n    }\n  } while (prop);\n\n  if (result === null || result === undefined) {\n    return fallback;\n  }\n\n  return result;\n}\n\n/**\n * @description\n * Get property override in chain\n *\n * @param {Object} context\n * @param {string} prop\n * @returns {*}\n */\nexport function getPropertyOverride(context, prop) {\n  if (!context) {\n    return false;\n  }\n\n  return isFunction(context[prop]) ? context[prop] : getPropertyOverride(getPrototypeOf(context), prop);\n}\n\n/**\n * @description\n * Handle Promise or PromiseLike object\n *\n * @param {Promise|PromiseLike} promise\n * @returns {Promise|PromiseLike}\n */\nexport function handlePromise(promise) {\n  if (promise && promise.then) {\n    return promise;\n  }\n\n  return {\n    then: (cb) => handlePromise(cb(promise)),\n    catch: noop,\n    value: promise,\n    isPromiseLike: true,\n  };\n}\n\n/**\n * @description\n * Handle array of Promises or PromiseLike objects\n *\n * @param promises\n * @returns {Promise|PromiseLike}\n */\nexport function handlePromises(promises) {\n  const isAnyPromiseNotPromiseLike = promises.some(promise => promise && promise.then && !promise.isPromiseLike);\n  if (isAnyPromiseNotPromiseLike) {\n    return Promise.all(promises);\n  }\n\n  const results = promises.map(promise => promise.value);\n\n  return handlePromise(results);\n}\n\n/**\n * @description\n * Format message for rule\n *\n * @param {string|Function} message - message template\n * @param {*} actual - actual value\n * @param {*} expected - expected value\n * @param {string} property - validating property\n * @param {Object} obj - validating object\n * @param {Function} rule - validating function\n * @returns {Promise<string>|PromiseLike<string>}\n */\nexport function formatMessage(message = 'No default message for rule \"%{rule}\"', actual, expected, property, obj, rule) {\n  const lookup = {\n    actual,\n    expected,\n    property,\n    rule\n  };\n\n  const formattedMessage = isFunction(message)\n    ? message(actual, expected, property, obj)\n    : (isString(message) ? message.replace(/%\\{([a-z]+)\\}/ig, (_, match) => lookup[match.toLowerCase()] || '') : message);\n\n  return handlePromise(formattedMessage);\n}\n\n/**\n * @typedef {Object} PromiseLike\n * @property {Function} then\n * @property {Function} catch\n * @property {*} value\n * @property {boolean} isPromiseLike\n */\n","import { isDefined, toString } from '../utils';\n\n/**\n *\n * @param value\n * @param divisibleBy\n * @returns {boolean}\n */\nexport default function divisibleByRule(value, divisibleBy) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  let multiplier = Math.max((toString(value - Math.floor(value)).length - 2), (toString(divisibleBy - Math.floor(divisibleBy)).length - 2));\n\n  multiplier = multiplier > 0 ? Math.pow(10, multiplier) : 1;\n\n  return (value * multiplier) % (divisibleBy * multiplier) === 0;\n}\n","import { isDefined, inArray } from '../utils';\n\n/**\n *\n * @param value\n * @param e\n * @returns {boolean}\n */\nexport default function enumRule(value, e) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return inArray(e, value);\n}\n","import { isDefined, isString, isFunction } from '../utils';\n\nconst FORMATS = {\n  'int':            /^-?\\d+$/,\n  'float':          /^-?\\d+\\.\\d+$/,\n  'number':         /^-?\\d+\\.?\\d*$/,\n  'email':          /^((([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+(\\.([a-z]|\\d|[!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])+)*)|((\\x22)((((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(([\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f]|\\x21|[\\x23-\\x5b]|[\\x5d-\\x7e]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(\\\\([\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))))*(((\\x20|\\x09)*(\\x0d\\x0a))?(\\x20|\\x09)+)?(\\x22)))@((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?$/i,\n  'ip':             /^(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/i,\n  'ipv6':           /^([0-9A-Fa-f]{1,4}:){7}[0-9A-Fa-f]{1,4}$/,\n  'time':           /^\\d{2}:\\d{2}:\\d{2}$/,\n  'date':           /^\\d{4}-\\d{2}-\\d{2}$/,\n  'date-time':      /^\\d{4}-\\d{2}-\\d{2}T\\d{2}:\\d{2}:\\d{2}(?:.\\d{1,3})?Z$/,\n  'color':          /^#[a-z0-9]{6}|#[a-z0-9]{3}|(?:rgb\\(\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*,\\s*(?:[+-]?\\d+%?)\\s*\\))aqua|black|blue|fuchsia|gray|green|lime|maroon|navy|olive|orange|purple|red|silver|teal|white|yellow$/i,\n  'host-name':      /^(([a-zA-Z]|[a-zA-Z][a-zA-Z0-9\\-]*[a-zA-Z0-9])\\.)*([A-Za-z]|[A-Za-z][A-Za-z0-9\\-]*[A-Za-z0-9])/,\n  'url':            /^(https?|ftp|git):\\/\\/(((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:)*@)?(((\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5])\\.(\\d|[1-9]\\d|1\\d\\d|2[0-4]\\d|25[0-5]))|((([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|\\d|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.)+(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])*([a-z]|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])))\\.?)(:\\d*)?)(\\/((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)+(\\/(([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)*)*)?)?(\\?((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|[\\uE000-\\uF8FF]|\\/|\\?)*)?(\\#((([a-z]|\\d|-|\\.|_|~|[\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF])|(%[\\da-f]{2})|[!\\$&'\\(\\)\\*\\+,;=]|:|@)|\\/|\\?)*)?$/i,\n  'regex':          {\n    test: function test(value) {\n      try {\n        new RegExp(value);\n      }\n      catch (e) {\n        return false;\n      }\n\n      return true;\n    }\n  }\n};\n\n/**\n *\n * @param value\n * @param format\n * @returns {boolean}\n */\nexport default function formatRule(value, format) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  if (!FORMATS[format]) {\n    throw new Error(`Unknown format \"${format}\"`);\n  }\n\n  return FORMATS[format].test(value);\n}\n\n/**\n *\n * @param name\n * @param format\n */\nexport function addFormatToFormatRule(name, format) {\n  if (isString(format)) {\n    FORMATS[name] = new RegExp(format);\n  } else if (isFunction(format)) {\n    FORMATS[name] = {\n      test: format,\n    };\n  } else {\n    FORMATS[name] = format;\n  }\n}\n","import { hasOwnProperty } from './utils';\nimport {\n  divisibleByRule,\n  enumRule,\n  exclusiveMaxRule,\n  exclusiveMinRule,\n  formatRule,\n  matchToPropertyRule,\n  matchToRule,\n  maxItemsRule,\n  maxLengthRule,\n  maxRule,\n  minItemsRule,\n  minLengthRule,\n  minRule,\n  notMatchToPropertiesRule,\n  notMatchToRule,\n  patternRule,\n  requiredRule,\n  typeRule,\n  uniqueItemsRule,\n} from './rules';\n\nconst rulesStorage = {};\n\n/**\n * Register validation rule\n *\n * @param {string} name - rule name\n * @param {Function} rule - rule function\n * @param {string|Function} message - rule message\n */\nexport function registerRule(name, rule, message) {\n  if (hasOwnProperty(rulesStorage, name)) {\n    console.warn(`[WARNING]: Trying to override defined rule '${name}'. Please use 'overrideRule' function instead.`);\n  }\n\n  rulesStorage[name] = {\n    name,\n    message,\n    check: rule\n  };\n}\n\n/**\n * Check if rule is registered\n *\n * @param {string} name - rule name\n * @returns {boolean}\n */\nexport function hasRule(name) {\n  return hasOwnProperty(rulesStorage, name);\n}\n\n/**\n * Get rule by name\n *\n * @param {string} name\n * @returns {{name, message, check}}\n */\nexport function getRule(name) {\n  return rulesStorage[name] || {};\n}\n\n/**\n * Override rule by name\n *\n * @param {string} name - rule name\n * @param {Function} rule - rule function\n * @param {string|Function} message - rule message\n */\nexport function overrideRule(name, rule, message) {\n  if (hasRule(name)) {\n    let defaultRule = getRule(name);\n\n    defaultRule.check = rule;\n    defaultRule.message = message || defaultRule.message;\n  }\n}\n\n/**\n * Override rule message by name\n *\n * @param {string} name - rule name\n * @param {string|Function} message - rule message\n */\nexport function overrideRuleMessage(name, message) {\n  if (hasRule(name)) {\n    let defaultRule = getRule(name);\n\n    defaultRule.message = message;\n  }\n}\n\nregisterRule('divisibleBy', divisibleByRule, 'must be divisible by %{expected}');\nregisterRule('enum', enumRule, 'must be present in given enumerator');\nregisterRule('exclusiveMax', exclusiveMaxRule, 'must be less than %{expected}');\nregisterRule('exclusiveMin', exclusiveMinRule, 'must be greater than %{expected}');\nregisterRule('format', formatRule, 'is not a valid %{expected}');\nregisterRule('matchToProperty', matchToPropertyRule, 'should match to %{expected}');\nregisterRule('matchTo', matchToRule, 'should match to %{expected}');\nregisterRule('maxItems', maxItemsRule, 'must contain less than %{expected} items');\nregisterRule('maxLength', maxLengthRule, 'is too long (maximum is %{expected} characters)');\nregisterRule('max', maxRule, 'must be less than or equal to %{expected}');\nregisterRule('minItems', minItemsRule, 'must contain more than %{expected} items');\nregisterRule('minLength', minLengthRule, 'is too short (minimum is %{expected} characters)');\nregisterRule('min', minRule, 'must be greater than or equal to %{expected}');\nregisterRule('notMatchToProperty', notMatchToPropertiesRule, 'should not match to %{expected}');\nregisterRule('notMatchToProperties', notMatchToPropertiesRule, 'should not match to %{expected}');\nregisterRule('notMatchTo', notMatchToRule, 'should not match to %{expected}');\nregisterRule('pattern', patternRule, 'invalid input');\nregisterRule('required', requiredRule, 'is required');\nregisterRule('type', typeRule, 'must be of %{expected} type');\nregisterRule('uniqueItems', uniqueItemsRule, 'must hold a unique set of values');\n","import { isDefined } from '../utils';\nimport { registerRule } from '../storage';\n\n/**\n *\n * @param value\n * @param matchTo\n * @returns {boolean}\n */\nexport default function matchToRule(value, matchTo) {\n  return value === matchTo;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param matchToProperty\n * @param obj\n * @returns {boolean}\n */\nexport default function matchToPropertyRule(value, matchToProperty, obj) {\n  return value === obj[matchToProperty];\n}\n","import { isDefined, isArray } from '../utils';\n\n/**\n *\n * @param value\n * @param notMatchTo\n * @returns {*}\n */\nexport default function notMatchToRule(value, notMatchTo) {\n  if (!isArray(notMatchTo)) {\n    notMatchTo = [notMatchTo];\n  }\n\n  return notMatchTo.every(not => not !== value);\n}\n","import { isDefined, isArray } from '../utils';\n\n/**\n *\n * @param value\n * @param notMatchToProperties\n * @param obj\n * @returns {*}\n */\nexport default function notMatchToPropertiesRule(value, notMatchToProperties, obj) {\n  if (!isArray(notMatchToProperties)) {\n    notMatchToProperties = [notMatchToProperties];\n  }\n\n  return notMatchToProperties.every(not => obj[not] !== value);\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param max\n * @returns {boolean}\n */\nexport default function maxRule(value, max) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value <= max;\n}\n","import { isDefined, isArray } from '../utils';\n\n/**\n *\n * @param value\n * @param minItems\n * @returns {boolean}\n */\nexport default function maxItemsRule(value, minItems) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return isArray(value) && value.length <= minItems;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param maxLength\n * @returns {boolean}\n */\nexport default function maxLengthRule(value, maxLength) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value.length <= maxLength;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param exclusiveMax\n * @returns {boolean}\n */\nexport default function exclusiveMaxRule(value, exclusiveMax) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value < exclusiveMax;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param min\n * @returns {boolean}\n */\nexport default function minRule(value, min) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value >= min;\n}\n","import { isDefined, isArray } from '../utils';\n\n/**\n *\n * @param value\n * @param minItems\n * @returns {boolean}\n */\nexport default function minItemsRule(value, minItems) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return isArray(value) && value.length >= minItems;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param minLength\n * @returns {boolean}\n */\nexport default function minLengthRule(value, minLength) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value.length >= minLength;\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param exclusiveMin\n * @returns {boolean}\n */\nexport default function exclusiveMinRule(value, exclusiveMin) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  return value > exclusiveMin;\n}\n","import { isDefined, isString } from '../utils';\n\n/**\n *\n * @param value\n * @param pattern\n * @returns {boolean}\n */\nexport default function patternRule(value, pattern) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  pattern = isString(pattern)\n    ? new RegExp(pattern)\n    : pattern;\n\n  return pattern.test(value);\n}\n","import { isDefined, isBoolean, isObject } from '../utils';\n\n/**\n *\n * @param value\n * @param required\n * @returns {*}\n */\nexport default function requiredRule(value, required) {\n  if (value) {\n    return true;\n  }\n\n  if (isBoolean(required)) {\n    return !required;\n  }\n\n  if (isObject(required)) {\n    const {\n      allowEmpty,\n      allowZero\n    } = required;\n\n    if (isBoolean(allowEmpty)) {\n      return allowEmpty && value === '';\n    }\n\n    if (isBoolean(allowZero)) {\n      return allowZero && value === 0;\n    }\n  }\n\n  return isDefined(value);\n}\n","import { isDefined, isBoolean, isNumber, isString, isDate, isObject, isArray } from '../utils';\n\nfunction checkValueType(value, type) {\n  switch (type) {\n    case 'boolean':\n      return isBoolean(value);\n\n    case 'number':\n      return isNumber(value);\n\n    case 'string':\n      return isString(value);\n\n    case 'date':\n      return isDate(value);\n\n    case 'object':\n      return isObject(value);\n\n    case 'array':\n      return isArray(value);\n\n    default:\n      return true;\n  }\n}\n\n/**\n *\n * @param value\n * @param type\n * @returns {boolean}\n */\nexport default function typeRule(value, type) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  let types = type;\n\n  if (!Array.isArray(type)) {\n    types = [type];\n  }\n\n  return types.some(type => checkValueType(value, type));\n}\n","import { isDefined } from '../utils';\n\n/**\n *\n * @param value\n * @param uniqueItems\n * @returns {boolean}\n */\nexport default function uniqueItemsRule(value, uniqueItems) {\n  if (!isDefined(value)) {\n    return true;\n  }\n\n  if (!uniqueItems) {\n    return true;\n  }\n\n  const hash = {};\n\n  let i = 0, ln = value.length;\n  for (; i < ln; i++) {\n    const key = JSON.stringify(value[i]);\n    if (hash[key]) {\n      return false;\n    }\n\n    hash[key] = true;\n  }\n\n  return true;\n}\n","import { isString, isObject, getPrototypeOf } from './utils';\n\n/**\n * @typedef ValidationResult\n * @property {boolean} isValid - check if validation result has not errors\n * @property {boolean} hasErrors - check if validation result has errors\n * @property {boolean} hasErrorsOfTypes - check if validation result has errors of specific types\n * @property {*} getErrors - get validation result errors\n * @property {*} getFirstErrors - get first validation result errors\n * @property {Array<*>} getErrorsAsArray - get validation result errors as array\n * @property {string} getFirstError - get first validation result error\n *\n * ValidationResult is util class that contain information about errors and any level\n *\n * @param {Object} errors - validation errors\n * @returns {ValidationResult}\n */\nexport default function ValidationResult(errors = {}) {\n  const that = {\n    ...getPrototypeOf(errors),\n    ...errors,\n  };\n\n  Object.defineProperties(that, {\n    isValid: {\n      value: function isValid() {\n        return !this.hasErrors();\n      },\n    },\n    hasErrors: {\n      value: function hasErrors() {\n        const keys = Object.keys(that);\n\n        return keys.some(key => {\n          if (that[key].hasErrors) {\n            return that[key].hasErrors();\n          }\n\n          return that[key];\n        });\n      },\n    },\n    hasErrorsOfTypes: {\n      value: function hasErrorsOfTypes(...types) {\n        const keys = Object.keys(that);\n\n        return keys.some(key => {\n          if (types.indexOf(key) !== -1) {\n            return true;\n          }\n\n          if (that[key].hasErrorsOfTypes) {\n            return that[key].hasErrorsOfTypes(...types);\n          }\n\n          return false;\n        });\n      },\n    },\n    getErrors: {\n      value: function getErrors(includeEmptyErrors) {\n        const keys = Object.keys(that);\n\n        return keys.reduce((result, key) => {\n          const subErrors = that[key].getErrors ? that[key].getErrors(includeEmptyErrors) : that[key];\n\n          if (Object.keys(subErrors).length || includeEmptyErrors) {\n            return {\n              ...result,\n              [key]: (subErrors),\n            };\n          }\n\n          return result;\n        }, {});\n      },\n    },\n    getFirstErrors: {\n      value: function getFirstErrors(includeEmptyErrors) {\n        const keys = Object.keys(that);\n\n        return keys.reduce((result, key, index) => {\n          const subErrors = that[key].getFirstErrors ? that[key].getFirstErrors(includeEmptyErrors) : that[key];\n\n          if (!isString(result) && isObject(that[key]) && (Object.keys(subErrors).length || includeEmptyErrors)) {\n            return {\n              ...result,\n              [key]: (subErrors),\n            };\n          }\n\n          return index === 0 ? subErrors : result;\n        }, {});\n      }\n    },\n    getErrorsAsArray: {\n      value: function getErrorsAsArray(includeEmptyErrors) {\n        const keys = Object.keys(that);\n\n        return keys.map((key) => {\n          const subErrors = that[key].getErrorsAsArray ? that[key].getErrorsAsArray(includeEmptyErrors) : that[key];\n\n          if (subErrors.length || includeEmptyErrors) {\n            return subErrors;\n          }\n\n          return null;\n        }, {}).filter(error => !!error);\n      },\n    },\n    getFirstError: {\n      value: function getFirstError(...exclude) {\n        return (this.getErrorsAsArray(exclude) || [])[0];\n      },\n    },\n  });\n\n  return that;\n}\n","import { getRule, hasRule } from './storage';\nimport {\n  noop,\n  isFunction,\n  isString,\n  isArray,\n  castArray,\n  handlePromise,\n  handlePromises,\n  formatMessage,\n  setPrototypeOf,\n  getProperty,\n  getPropertyOverride,\n  hasOwnProperty,\n} from './utils';\n\nimport ValidationResult from './validationResult';\n\n/**\n * @description\n * Main endpoint for validation\n * Validate anything by specified schema\n *\n * @param {Object} schema - Validation schema\n * @param {Object|Array} anything - Anything to validate\n * @returns {Promise<ValidationResult>}\n *\n * @example\n * import { validate } from 'valirator';\n *\n * const schema = {\n *    FirstName: {\n *      required: true,\n *    },\n *    LastName: {\n *      required: true,\n *    },\n * };\n *\n * const obj = {\n *   FirstName: 'Bob',\n * };\n *\n * const validationResult = await validate(schema, obj);\n */\nexport function validate(schema, anything) {\n  return validateProperty(undefined, anything, schema);\n}\n\n/**\n * @description\n * Wrapper on validate function for sync validation\n * Can be used if no async operation defined (rule or message)\n *\n * @param {Object} schema - Validation schema\n * @param {Object|Array} anything - Anything to validate\n * @returns {ValidationResult}\n */\nexport function validateSync(schema, anything) {\n  const promise = validate(schema, anything);\n\n  return promise && promise.value;\n}\n\n/**\n *\n * @param obj\n * @param schema\n * @param overrides\n * @returns {Promise<ValidationResult>}\n */\nexport function validateObject(obj, schema, overrides = {}) {\n  const keys = Object.keys(schema);\n  const promises = keys.map(property => validateProperty(property, obj, schema, overrides));\n\n  return handlePromises(promises)\n    .then(results => {\n      let errors = {};\n\n      results.forEach((result, i) => {\n        errors[keys[i]] = result;\n      });\n\n      return new ValidationResult(errors);\n    });\n}\n\n/**\n *\n * @param obj\n * @param schema\n * @param overrides\n * @returns {ValidationResult}\n */\nexport function validateObjectSync(obj, schema, overrides) {\n  const promise = validateObject(obj, schema, overrides);\n\n  return promise && promise.value;\n}\n\n/**\n *\n * @param array\n * @param schema\n * @param overrides\n * @returns {Promise<ValidationResult>}\n */\nexport function validateArray(array, schema, overrides = {}) {\n  const promises = (array || []).map(item => validateObject(item, schema, overrides));\n\n  return handlePromises(promises)\n    .then(results => {\n      let errors = {};\n\n      results.forEach((result, i) => {\n        errors[i] = result;\n      });\n\n      return new ValidationResult(errors);\n    });\n}\n\n/**\n *\n * @param array\n * @param schema\n * @param overrides\n * @returns {ValidationResult}\n */\nexport function validateArraySync(array, schema, overrides) {\n  const promise = validateArray(array, schema, overrides);\n\n  return promise && promise.value;\n}\n\n/**\n *\n * @param property\n * @param obj\n * @param schema\n * @param overrides\n * @returns {Promise<ValidationResult>}\n */\nexport function validateProperty(property, obj, schema = {}, overrides = {}) {\n  const propertyValue = getProperty(schema, property, {});\n  let {\n    __isArray__,\n    rules: propertyRules,\n    messages: propertyMessages = {},\n    overrides: propertyOverrides = {},\n    properties: propertyProperties,\n  } = propertyValue;\n\n  const {\n    rules: overriddenRules = {},\n    messages: overriddenMessages = {},\n  } = overrides;\n\n  if (!propertyRules && !propertyProperties) {\n    const propertyKeys = Object.keys(propertyValue);\n    const hasRuleProperty = propertyKeys.some(key => (\n      hasRule(key)\n      || hasOwnProperty(overriddenRules, key)\n      || isFunction(propertyValue[key])\n    ));\n\n    if (hasRuleProperty) {\n      propertyRules = propertyValue;\n    }\n  }\n\n  if (!propertyRules && !propertyProperties) {\n    propertyProperties = propertyValue;\n  }\n\n  if (!propertyRules) {\n    propertyRules = {};\n  }\n\n  if (!propertyProperties) {\n    propertyProperties = {};\n  }\n\n  setPrototypeOf(propertyOverrides, overrides);\n  setPrototypeOf(propertyRules, overriddenRules);\n  setPrototypeOf(propertyMessages, overriddenMessages);\n\n  const value = getProperty(obj, property);\n\n  return validateValue(value, propertyRules, propertyMessages, obj, property, schema)\n    .then(valueValidationResult => {\n      if (propertyProperties) {\n        const subValidationCallback = (subValidationResult) => {\n          setPrototypeOf(valueValidationResult, subValidationResult);\n\n          return new ValidationResult(valueValidationResult);\n        };\n\n        if (isArray(value) || __isArray__) {\n          return validateArray(value, propertyProperties, propertyOverrides)\n            .then(subValidationCallback);\n        } else {\n          return validateObject(value, propertyProperties, propertyOverrides)\n            .then(subValidationCallback);\n        }\n      }\n\n      return new ValidationResult(valueValidationResult);\n    });\n}\n\n/**\n *\n * @param property\n * @param obj\n * @param schema\n * @param overrides\n * @returns {ValidationResult}\n */\nexport function validatePropertySync(property, obj, schema, overrides) {\n  const promise = validateProperty(property, obj, schema, overrides);\n\n  return promise && promise.value;\n}\n\n/**\n *\n * @param value\n * @param rules\n * @param messages\n * @param obj\n * @param property\n * @param schema\n * @returns {Promise<ValidationResult>}\n */\nexport function validateValue(value, rules = {}, messages = {}, obj, property, schema) {\n  const keys = Object.keys(rules);\n  const promises = keys.map(rule => {\n    const expected = rules[rule];\n    const message = messages[rule];\n\n    return validateRule(rule, expected, value, message, rules, messages, obj, property, schema);\n  });\n\n  return handlePromises(promises)\n    .then(results => {\n      let errors = {};\n\n      results.forEach((result, i) => {\n        if (result) {\n          errors[keys[i]] = result;\n        }\n      });\n\n      return new ValidationResult(errors);\n    });\n}\n\n/**\n *\n * @param value\n * @param rules\n * @param messages\n * @param obj\n * @param property\n * @param schema\n * @returns {ValidationResult}\n */\nexport function validateValueSync(value, rules, messages, obj, property, schema) {\n  const promise = validateValue(value, rules, messages, obj, property, schema);\n\n  return promise && promise.value;\n}\n\n/**\n *\n * @param rule\n * @param expected\n * @param value\n * @param message\n * @param rules\n * @param messages\n * @param obj\n * @param property\n * @param schema\n * @returns {Promise<boolean>}\n */\nexport function validateRule(rule, expected, value, message, rules, messages, obj, property, schema) {\n  const {\n    check: defaultRule = noop,\n    message: defaultMessage\n  } = getRule(rule);\n\n  const overriddenRule = rules && (getPropertyOverride(rules, rule) || rules[rule]);\n  const overriddenMessage = messages && (getPropertyOverride(messages, rule) || messages[rule]);\n\n  const ruleFn = isFunction(overriddenRule) ? overriddenRule : defaultRule;\n  const ruleMsg = overriddenMessage || message || defaultMessage;\n\n  const expects = castArray(expected);\n  const validations = expects.map(exp => handlePromise(ruleFn(value, exp, obj, property, schema, defaultRule)));\n\n  return handlePromises(validations)\n    .then(results => {\n      const hasValidResult = results.some(result => result === true);\n\n      if (!hasValidResult) {\n        const result = results.find(result => result !== true);\n\n        if (isString(result)) {\n          return result;\n        } else if (result !== true) {\n          return formatMessage(ruleMsg, value, expects.join(', '), property, obj, rule);\n        }\n      }\n    });\n}\n\n/**\n *\n * @param rule\n * @param expected\n * @param value\n * @param message\n * @param rules\n * @param messages\n * @param obj\n * @param property\n * @param schema\n * @returns {boolean}\n */\nexport function validateRuleSync(rule, expected, value, message, rules, messages, obj, property, schema) {\n  const promise = validateRule(rule, expected, value, message, rules, messages, obj, property, schema);\n\n  return promise && promise.value;\n}\n","import { validate, validateSync, validateProperty, validatePropertySync } from './core';\n\n/**\n * ValidationSchema is util class that\n *\n * @param {Object} schema -\n * @constructor\n */\nexport default function ValidationSchema(schema) {\n  this._schema = schema;\n\n  this.validate = (obj) => validate(schema, obj);\n  this.validateSync = (obj) => validateSync(schema, obj);\n  this.validateProperty = (property, obj) => validateProperty(property, obj, schema);\n  this.validatePropertySync = (property, obj) => validatePropertySync(property, obj);\n}\n","import { validate, validateSync } from '../core';\n\n/**\n *\n * @param schema\n * @param onlyFirstErrors\n * @returns {ngValidatorFn}\n */\nexport function ngValidator(schema, onlyFirstErrors) {\n  return function ngValidatorFn(control) {\n    const validationResult = validateSync(schema, control.value);\n\n    return onlyFirstErrors ? validationResult.getFirstErrors() : validationResult.getErrors();\n  }\n}\n\n/**\n *\n * @param schema\n * @param onlyFirstErrors\n * @returns {ngAsyncValidatorFn}\n */\nexport function ngAsyncValidator(schema, onlyFirstErrors) {\n  return function ngAsyncValidatorFn(control) {\n    return validate(schema, control.value)\n      .then(validationResult => {\n        return onlyFirstErrors ? validationResult.getFirstErrors() : validationResult.getErrors();\n      });\n  }\n}\n","import { validate, validateSync } from '../core';\n\n/**\n *\n * @param schema\n * @param allErrors\n * @returns {reduxFormValidatorFn}\n */\nexport function reduxFormValidator(schema, allErrors) {\n  return function reduxFormValidatorFn(values) {\n    const validationResult = validateSync(schema, values);\n\n    return allErrors ? validationResult.getErrors() : validationResult.getFirstErrors();\n  }\n}\n\n/**\n *\n * @param schema\n * @param allErrors\n * @returns {reduxFormAsyncValidatorFn}\n */\nexport function reduxFormAsyncValidator(schema, allErrors) {\n  return function reduxFormAsyncValidatorFn(values) {\n    return validate(schema, values)\n      .then(validationResult => {\n        return allErrors ? validationResult.getErrors() : validationResult.getFirstErrors();\n      });\n  }\n}\n"],"names":["noop","isType","obj","typeStr","Object","prototype","toString","call","isObject","isArray","isFunction","isString","isDate","isNumber","isNaN","isBoolean","isEmpty","length","keys","isNull","isUndefined","isNullOrUndefined","isDefined","String","indexOf","array","value","inArray","castArray","hasOwnProperty","prop","setPrototypeOf","proto","__proto__","getPrototypeOf","getProperty","path","fallback","result","split","first","rest","join","undefined","getPropertyOverride","context","handlePromise","promise","then","cb","handlePromises","promises","isAnyPromiseNotPromiseLike","some","isPromiseLike","Promise","all","results","map","formatMessage","message","actual","expected","property","rule","lookup","formattedMessage","replace","_","match","toLowerCase","divisibleByRule","divisibleBy","multiplier","Math","max","floor","pow","enumRule","e","FORMATS","test","RegExp","formatRule","format","Error","addFormatToFormatRule","name","rulesStorage","registerRule","warn","hasRule","getRule","overrideRule","defaultRule","check","overrideRuleMessage","exclusiveMaxRule","exclusiveMinRule","matchToPropertyRule","matchToRule","maxItemsRule","maxLengthRule","maxRule","minItemsRule","minLengthRule","minRule","notMatchToPropertiesRule","notMatchToRule","patternRule","requiredRule","typeRule","uniqueItemsRule","matchTo","matchToProperty","notMatchTo","every","not","notMatchToProperties","minItems","maxLength","exclusiveMax","min","minLength","exclusiveMin","pattern","required","allowEmpty","allowZero","checkValueType","type","types","Array","uniqueItems","hash","i","ln","key","JSON","stringify","ValidationResult","errors","that","defineProperties","isValid","hasErrors","hasErrorsOfTypes","getErrors","includeEmptyErrors","reduce","subErrors","getFirstErrors","index","getErrorsAsArray","filter","error","getFirstError","exclude","validate","schema","anything","validateProperty","validateSync","validateObject","overrides","forEach","validateObjectSync","validateArray","item","validateArraySync","propertyValue","__isArray__","propertyRules","rules","messages","propertyMessages","propertyOverrides","propertyProperties","properties","overriddenRules","overriddenMessages","propertyKeys","hasRuleProperty","validateValue","subValidationCallback","subValidationResult","valueValidationResult","validatePropertySync","validateRule","validateValueSync","defaultMessage","overriddenRule","overriddenMessage","ruleFn","ruleMsg","expects","validations","exp","hasValidResult","find","validateRuleSync","ValidationSchema","_schema","ngValidator","onlyFirstErrors","ngValidatorFn","control","validationResult","ngAsyncValidator","ngAsyncValidatorFn","reduxFormValidator","allErrors","reduxFormValidatorFn","values","reduxFormAsyncValidator","reduxFormAsyncValidatorFn"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AAIA,AAAO,SAASA,IAAT,GAAgB;;;;;;;;;;AAWvB,AAAO,SAASC,MAAT,CAAgBC,GAAhB,EAAqBC,OAArB,EAA8B;SAC3BC,OAAOC,SAAP,CAAiBC,QAAjB,CAA0BC,IAA1B,CAA+BL,GAA/B,MAAwCC,OAAhD;;;;;;;;;;AAUF,AAAO,SAASK,QAAT,CAAkBN,GAAlB,EAAuB;SACrBD,OAAOC,GAAP,EAAY,iBAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASO,OAAT,CAAiBP,GAAjB,EAAsB;SACpBD,OAAOC,GAAP,EAAY,gBAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASQ,UAAT,CAAoBR,GAApB,EAAyB;SACvBD,OAAOC,GAAP,EAAY,mBAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASS,QAAT,CAAkBT,GAAlB,EAAuB;SACrBD,OAAOC,GAAP,EAAY,iBAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASU,MAAT,CAAgBV,GAAhB,EAAqB;SACnBD,OAAOC,GAAP,EAAY,eAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASW,QAAT,CAAkBX,GAAlB,EAAuB;SACrBD,OAAOC,GAAP,EAAY,iBAAZ,KAAkC,CAACY,MAAMZ,GAAN,CAA1C;;;;;;;;;;AAUF,AAAO,SAASa,SAAT,CAAmBb,GAAnB,EAAwB;SACtBD,OAAOC,GAAP,EAAY,kBAAZ,CAAP;;;;;;;;;;;;;;;AAeF,AAAO,SAASc,OAAT,CAAiBd,GAAjB,EAAsB;SACpBA,QAAQ,EAAR,IAAeO,QAAQP,GAAR,KAAgBA,IAAIe,MAAJ,KAAe,CAA9C,IAAqDT,SAASN,GAAT,KAAiBE,OAAOc,IAAP,CAAYhB,GAAZ,EAAiBe,MAAjB,KAA4B,CAAzG;;;;;;;;;;AAUF,AAAO,SAASE,MAAT,CAAgBjB,GAAhB,EAAqB;SACnBD,OAAOC,GAAP,EAAY,eAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASkB,WAAT,CAAqBlB,GAArB,EAA0B;SACxBD,OAAOC,GAAP,EAAY,oBAAZ,CAAP;;;;;;;;;;AAUF,AAAO,SAASmB,iBAAT,CAA2BnB,GAA3B,EAAgC;SAC9BiB,OAAOjB,GAAP,KAAekB,YAAYlB,GAAZ,CAAtB;;;;;;;;;;AAUF,AAAO,SAASoB,SAAT,CAAmBpB,GAAnB,EAAwB;SACtB,EAAEmB,kBAAkBnB,GAAlB,KAA0Bc,QAAQd,GAAR,CAA5B,CAAP;;;;;;;;;;AAUF,AAAO,SAASI,QAAT,CAAkBJ,GAAlB,EAAuB;SACrBqB,OAAOrB,GAAP,CAAP;;;;;;;;;;;AAWF,AAAO,SAASsB,OAAT,CAAiBC,KAAjB,EAAwBC,KAAxB,EAA+B;MAChC,CAACjB,QAAQgB,KAAR,CAAL,EAAqB;WACZ,CAAC,CAAR;;;SAGKA,MAAMD,OAAN,CAAcE,KAAd,CAAP;;;;;;;;;;;AAWF,AAAO,SAASC,OAAT,CAAiBF,KAAjB,EAAwBC,KAAxB,EAA+B;SAC7BjB,QAAQgB,KAAR,KAAkBD,QAAQC,KAAR,EAAeC,KAAf,MAA0B,CAAC,CAApD;;;;;;;;;;AAUF,AAAO,SAASE,SAAT,CAAmBH,KAAnB,EAA0B;SACxBhB,QAAQgB,KAAR,IAAiBA,KAAjB,GAAyB,CAACA,KAAD,CAAhC;;;;;;;;;;;AAWF,AAAO,SAASI,cAAT,CAAwB3B,GAAxB,EAA6B4B,IAA7B,EAAmC;SACjC1B,OAAOC,SAAP,CAAiBwB,cAAjB,CAAgCtB,IAAhC,CAAqCL,GAArC,EAA0C4B,IAA1C,CAAP;;;;;;;;;;;AAWF,AAAO,SAASC,cAAT,CAAwB7B,GAAxB,EAA6B8B,KAA7B,EAAoC;MACrC5B,OAAO2B,cAAX,EAA2B;WAClB3B,OAAO2B,cAAP,CAAsB7B,GAAtB,EAA2B8B,KAA3B,CAAP;;;MAGEC,SAAJ,GAAgBD,KAAhB;;SAEO9B,GAAP;;;;;;;;;;AAUF,AAAO,SAASgC,cAAT,CAAwBhC,GAAxB,EAA6B;MAC9BE,OAAO8B,cAAX,EAA2B;WAClB9B,OAAO8B,cAAP,CAAsBhC,GAAtB,CAAP;;;SAGKA,IAAI+B,SAAX;;;;;;;;;;;;AAYF,AAAO,SAASE,WAAT,CAAqBjC,GAArB,EAAsD;MAA5BkC,IAA4B,uEAArB,EAAqB;MAAjBC,QAAiB,uEAAN,IAAM;;MACvDC,SAASpC,GAAb;MACI4B,OAAOxB,SAAS8B,IAAT,CAAX;;MAEIA,SAAS,EAAb,EAAiB;WACRE,MAAP;;;MAGE,CAAChB,UAAUpB,GAAV,CAAL,EAAqB;WACZmC,QAAP;;;KAGC;QACG7B,SAAS8B,MAAT,KAAoBT,eAAeS,MAAf,EAAuBR,IAAvB,CAAxB,EAAsD;aAC7CQ,OAAOR,IAAP,CAAP;KADF,MAEO;wBACoBA,KAAKS,KAAL,CAAW,GAAX,CADpB;;UACEC,KADF;UACYC,IADZ;;eAGIH,OAAOE,KAAP,CAAT;aACOC,KAAKC,IAAL,CAAU,GAAV,CAAP;;GAPJ,QASSZ,IATT;;MAWIQ,WAAW,IAAX,IAAmBA,WAAWK,SAAlC,EAA6C;WACpCN,QAAP;;;SAGKC,MAAP;;;;;;;;;;;AAWF,AAAO,SAASM,mBAAT,CAA6BC,OAA7B,EAAsCf,IAAtC,EAA4C;MAC7C,CAACe,OAAL,EAAc;WACL,KAAP;;;SAGKnC,WAAWmC,QAAQf,IAAR,CAAX,IAA4Be,QAAQf,IAAR,CAA5B,GAA4Cc,oBAAoBV,eAAeW,OAAf,CAApB,EAA6Cf,IAA7C,CAAnD;;;;;;;;;;AAUF,AAAO,SAASgB,aAAT,CAAuBC,OAAvB,EAAgC;MACjCA,WAAWA,QAAQC,IAAvB,EAA6B;WACpBD,OAAP;;;SAGK;UACC,cAACE,EAAD;aAAQH,cAAcG,GAAGF,OAAH,CAAd,CAAR;KADD;WAEE/C,IAFF;WAGE+C,OAHF;mBAIU;GAJjB;;;;;;;;;;AAeF,AAAO,SAASG,cAAT,CAAwBC,QAAxB,EAAkC;MACjCC,6BAA6BD,SAASE,IAAT,CAAc;WAAWN,WAAWA,QAAQC,IAAnB,IAA2B,CAACD,QAAQO,aAA/C;GAAd,CAAnC;MACIF,0BAAJ,EAAgC;WACvBG,QAAQC,GAAR,CAAYL,QAAZ,CAAP;;;MAGIM,UAAUN,SAASO,GAAT,CAAa;WAAWX,QAAQrB,KAAnB;GAAb,CAAhB;;SAEOoB,cAAcW,OAAd,CAAP;;;;;;;;;;;;;;;AAeF,AAAO,SAASE,aAAT,GAAiH;MAA1FC,OAA0F,uEAAhF,uCAAgF;MAAvCC,MAAuC;MAA/BC,QAA+B;MAArBC,QAAqB;MAAX7D,GAAW;MAAN8D,IAAM;;MAChHC,SAAS;kBAAA;sBAAA;sBAAA;;GAAf;;MAOMC,mBAAmBxD,WAAWkD,OAAX,IACrBA,QAAQC,MAAR,EAAgBC,QAAhB,EAA0BC,QAA1B,EAAoC7D,GAApC,CADqB,GAEpBS,SAASiD,OAAT,IAAoBA,QAAQO,OAAR,CAAgB,iBAAhB,EAAmC,UAACC,CAAD,EAAIC,KAAJ;WAAcJ,OAAOI,MAAMC,WAAN,EAAP,KAA+B,EAA7C;GAAnC,CAApB,GAA0GV,OAF/G;;SAIOd,cAAcoB,gBAAd,CAAP;;;;;;;;;;;AC9WF;;;;;;AAMA,AAAe,SAASK,eAAT,CAAyB7C,KAAzB,EAAgC8C,WAAhC,EAA6C;MACtD,CAAClD,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;MAGE+C,aAAaC,KAAKC,GAAL,CAAUrE,SAASoB,QAAQgD,KAAKE,KAAL,CAAWlD,KAAX,CAAjB,EAAoCT,MAApC,GAA6C,CAAvD,EAA4DX,SAASkE,cAAcE,KAAKE,KAAL,CAAWJ,WAAX,CAAvB,EAAgDvD,MAAhD,GAAyD,CAArH,CAAjB;;eAEawD,aAAa,CAAb,GAAiBC,KAAKG,GAAL,CAAS,EAAT,EAAaJ,UAAb,CAAjB,GAA4C,CAAzD;;SAEQ/C,QAAQ+C,UAAT,IAAwBD,cAAcC,UAAtC,MAAsD,CAA7D;;;ACfF;;;;;;AAMA,AAAe,SAASK,QAAT,CAAkBpD,KAAlB,EAAyBqD,CAAzB,EAA4B;MACrC,CAACzD,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKC,QAAQoD,CAAR,EAAWrD,KAAX,CAAP;;;ACXF,IAAMsD,UAAU;SACI,SADJ;WAEI,cAFJ;YAGI,eAHJ;WAII,44BAJJ;QAKI,mKALJ;UAMI,0CANJ;UAOI,qBAPJ;UAQI,qBARJ;eASI,qDATJ;WAUI,4MAVJ;eAWI,gGAXJ;SAYI,yqCAZJ;WAaI;UACV,SAASC,IAAT,CAAcvD,KAAd,EAAqB;UACrB;YACEwD,MAAJ,CAAWxD,KAAX;OADF,CAGA,OAAOqD,CAAP,EAAU;eACD,KAAP;;;aAGK,IAAP;;;CAtBN;;;;;;;;AAiCA,AAAe,SAASI,UAAT,CAAoBzD,KAApB,EAA2B0D,MAA3B,EAAmC;MAC5C,CAAC9D,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;MAGE,CAACsD,QAAQI,MAAR,CAAL,EAAsB;UACd,IAAIC,KAAJ,sBAA6BD,MAA7B,OAAN;;;SAGKJ,QAAQI,MAAR,EAAgBH,IAAhB,CAAqBvD,KAArB,CAAP;;;;;;;;AAQF,AAAO,SAAS4D,qBAAT,CAA+BC,IAA/B,EAAqCH,MAArC,EAA6C;MAC9CzE,SAASyE,MAAT,CAAJ,EAAsB;YACZG,IAAR,IAAgB,IAAIL,MAAJ,CAAWE,MAAX,CAAhB;GADF,MAEO,IAAI1E,WAAW0E,MAAX,CAAJ,EAAwB;YACrBG,IAAR,IAAgB;YACRH;KADR;GADK,MAIA;YACGG,IAAR,IAAgBH,MAAhB;;;;ACrCJ,IAAMI,eAAe,EAArB;;;;;;;;;AASA,AAAO,SAASC,YAAT,CAAsBF,IAAtB,EAA4BvB,IAA5B,EAAkCJ,OAAlC,EAA2C;MAC5C/B,eAAe2D,YAAf,EAA6BD,IAA7B,CAAJ,EAAwC;YAC9BG,IAAR,mDAA4DH,IAA5D;;;eAGWA,IAAb,IAAqB;cAAA;oBAAA;WAGZvB;GAHT;;;;;;;;;AAaF,AAAO,SAAS2B,OAAT,CAAiBJ,IAAjB,EAAuB;SACrB1D,eAAe2D,YAAf,EAA6BD,IAA7B,CAAP;;;;;;;;;AASF,AAAO,SAASK,OAAT,CAAiBL,IAAjB,EAAuB;SACrBC,aAAaD,IAAb,KAAsB,EAA7B;;;;;;;;;;AAUF,AAAO,SAASM,YAAT,CAAsBN,IAAtB,EAA4BvB,IAA5B,EAAkCJ,OAAlC,EAA2C;MAC5C+B,QAAQJ,IAAR,CAAJ,EAAmB;QACbO,cAAcF,QAAQL,IAAR,CAAlB;;gBAEYQ,KAAZ,GAAoB/B,IAApB;gBACYJ,OAAZ,GAAsBA,WAAWkC,YAAYlC,OAA7C;;;;;;;;;;AAUJ,AAAO,SAASoC,mBAAT,CAA6BT,IAA7B,EAAmC3B,OAAnC,EAA4C;MAC7C+B,QAAQJ,IAAR,CAAJ,EAAmB;QACbO,cAAcF,QAAQL,IAAR,CAAlB;;gBAEY3B,OAAZ,GAAsBA,OAAtB;;;;AAIJ6B,aAAa,aAAb,EAA4BlB,eAA5B,EAA6C,kCAA7C;AACAkB,aAAa,MAAb,EAAqBX,QAArB,EAA+B,qCAA/B;AACAW,aAAa,cAAb,EAA6BQ,gBAA7B,EAA+C,+BAA/C;AACAR,aAAa,cAAb,EAA6BS,gBAA7B,EAA+C,kCAA/C;AACAT,aAAa,QAAb,EAAuBN,UAAvB,EAAmC,4BAAnC;AACAM,aAAa,iBAAb,EAAgCU,mBAAhC,EAAqD,6BAArD;AACAV,aAAa,SAAb,EAAwBW,WAAxB,EAAqC,6BAArC;AACAX,aAAa,UAAb,EAAyBY,YAAzB,EAAuC,0CAAvC;AACAZ,aAAa,WAAb,EAA0Ba,aAA1B,EAAyC,iDAAzC;AACAb,aAAa,KAAb,EAAoBc,OAApB,EAA6B,2CAA7B;AACAd,aAAa,UAAb,EAAyBe,YAAzB,EAAuC,0CAAvC;AACAf,aAAa,WAAb,EAA0BgB,aAA1B,EAAyC,kDAAzC;AACAhB,aAAa,KAAb,EAAoBiB,OAApB,EAA6B,8CAA7B;AACAjB,aAAa,oBAAb,EAAmCkB,wBAAnC,EAA6D,iCAA7D;AACAlB,aAAa,sBAAb,EAAqCkB,wBAArC,EAA+D,iCAA/D;AACAlB,aAAa,YAAb,EAA2BmB,cAA3B,EAA2C,iCAA3C;AACAnB,aAAa,SAAb,EAAwBoB,WAAxB,EAAqC,eAArC;AACApB,aAAa,UAAb,EAAyBqB,YAAzB,EAAuC,aAAvC;AACArB,aAAa,MAAb,EAAqBsB,QAArB,EAA+B,6BAA/B;AACAtB,aAAa,aAAb,EAA4BuB,eAA5B,EAA6C,kCAA7C;;AC9GA;;;;;;AAMA,AAAe,SAASZ,WAAT,CAAqB1E,KAArB,EAA4BuF,OAA5B,EAAqC;SAC3CvF,UAAUuF,OAAjB;;;ACRF;;;;;;;AAOA,AAAe,SAASd,mBAAT,CAA6BzE,KAA7B,EAAoCwF,eAApC,EAAqDhH,GAArD,EAA0D;SAChEwB,UAAUxB,IAAIgH,eAAJ,CAAjB;;;ACRF;;;;;;AAMA,AAAe,SAASN,cAAT,CAAwBlF,KAAxB,EAA+ByF,UAA/B,EAA2C;MACpD,CAAC1G,QAAQ0G,UAAR,CAAL,EAA0B;iBACX,CAACA,UAAD,CAAb;;;SAGKA,WAAWC,KAAX,CAAiB;WAAOC,QAAQ3F,KAAf;GAAjB,CAAP;;;ACXF;;;;;;;AAOA,AAAe,SAASiF,wBAAT,CAAkCjF,KAAlC,EAAyC4F,oBAAzC,EAA+DpH,GAA/D,EAAoE;MAC7E,CAACO,QAAQ6G,oBAAR,CAAL,EAAoC;2BACX,CAACA,oBAAD,CAAvB;;;SAGKA,qBAAqBF,KAArB,CAA2B;WAAOlH,IAAImH,GAAJ,MAAa3F,KAApB;GAA3B,CAAP;;;ACZF;;;;;;AAMA,AAAe,SAAS6E,OAAT,CAAiB7E,KAAjB,EAAwBiD,GAAxB,EAA6B;MACtC,CAACrD,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,SAASiD,GAAhB;;;ACXF;;;;;;AAMA,AAAe,SAAS0B,YAAT,CAAsB3E,KAAtB,EAA6B6F,QAA7B,EAAuC;MAChD,CAACjG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKjB,QAAQiB,KAAR,KAAkBA,MAAMT,MAAN,IAAgBsG,QAAzC;;;ACXF;;;;;;AAMA,AAAe,SAASjB,aAAT,CAAuB5E,KAAvB,EAA8B8F,SAA9B,EAAyC;MAClD,CAAClG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,MAAMT,MAAN,IAAgBuG,SAAvB;;;ACXF;;;;;;AAMA,AAAe,SAASvB,gBAAT,CAA0BvE,KAA1B,EAAiC+F,YAAjC,EAA+C;MACxD,CAACnG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,QAAQ+F,YAAf;;;ACXF;;;;;;AAMA,AAAe,SAASf,OAAT,CAAiBhF,KAAjB,EAAwBgG,GAAxB,EAA6B;MACtC,CAACpG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,SAASgG,GAAhB;;;ACXF;;;;;;AAMA,AAAe,SAASlB,YAAT,CAAsB9E,KAAtB,EAA6B6F,QAA7B,EAAuC;MAChD,CAACjG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKjB,QAAQiB,KAAR,KAAkBA,MAAMT,MAAN,IAAgBsG,QAAzC;;;ACXF;;;;;;AAMA,AAAe,SAASd,aAAT,CAAuB/E,KAAvB,EAA8BiG,SAA9B,EAAyC;MAClD,CAACrG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,MAAMT,MAAN,IAAgB0G,SAAvB;;;ACXF;;;;;;AAMA,AAAe,SAASzB,gBAAT,CAA0BxE,KAA1B,EAAiCkG,YAAjC,EAA+C;MACxD,CAACtG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;SAGKA,QAAQkG,YAAf;;;ACXF;;;;;;AAMA,AAAe,SAASf,WAAT,CAAqBnF,KAArB,EAA4BmG,OAA5B,EAAqC;MAC9C,CAACvG,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;YAGQf,SAASkH,OAAT,IACN,IAAI3C,MAAJ,CAAW2C,OAAX,CADM,GAENA,OAFJ;;SAIOA,QAAQ5C,IAAR,CAAavD,KAAb,CAAP;;;ACfF;;;;;;AAMA,AAAe,SAASoF,YAAT,CAAsBpF,KAAtB,EAA6BoG,QAA7B,EAAuC;MAChDpG,KAAJ,EAAW;WACF,IAAP;;;MAGEX,UAAU+G,QAAV,CAAJ,EAAyB;WAChB,CAACA,QAAR;;;MAGEtH,SAASsH,QAAT,CAAJ,EAAwB;QAEpBC,UAFoB,GAIlBD,QAJkB,CAEpBC,UAFoB;QAGpBC,SAHoB,GAIlBF,QAJkB,CAGpBE,SAHoB;;;QAMlBjH,UAAUgH,UAAV,CAAJ,EAA2B;aAClBA,cAAcrG,UAAU,EAA/B;;;QAGEX,UAAUiH,SAAV,CAAJ,EAA0B;aACjBA,aAAatG,UAAU,CAA9B;;;;SAIGJ,UAAUI,KAAV,CAAP;;;AC9BF,SAASuG,cAAT,CAAwBvG,KAAxB,EAA+BwG,IAA/B,EAAqC;UAC3BA,IAAR;SACO,SAAL;aACSnH,UAAUW,KAAV,CAAP;;SAEG,QAAL;aACSb,SAASa,KAAT,CAAP;;SAEG,QAAL;aACSf,SAASe,KAAT,CAAP;;SAEG,MAAL;aACSd,OAAOc,KAAP,CAAP;;SAEG,QAAL;aACSlB,SAASkB,KAAT,CAAP;;SAEG,OAAL;aACSjB,QAAQiB,KAAR,CAAP;;;aAGO,IAAP;;;;;;;;;;AAUN,AAAe,SAASqF,QAAT,CAAkBrF,KAAlB,EAAyBwG,IAAzB,EAA+B;MACxC,CAAC5G,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;MAGEyG,QAAQD,IAAZ;;MAEI,CAACE,MAAM3H,OAAN,CAAcyH,IAAd,CAAL,EAA0B;YAChB,CAACA,IAAD,CAAR;;;SAGKC,MAAM9E,IAAN,CAAW;WAAQ4E,eAAevG,KAAf,EAAsBwG,IAAtB,CAAR;GAAX,CAAP;;;AC1CF;;;;;;AAMA,AAAe,SAASlB,eAAT,CAAyBtF,KAAzB,EAAgC2G,WAAhC,EAA6C;MACtD,CAAC/G,UAAUI,KAAV,CAAL,EAAuB;WACd,IAAP;;;MAGE,CAAC2G,WAAL,EAAkB;WACT,IAAP;;;MAGIC,OAAO,EAAb;;MAEIC,IAAI,CAAR;MAAWC,KAAK9G,MAAMT,MAAtB;SACOsH,IAAIC,EAAX,EAAeD,GAAf,EAAoB;QACZE,MAAMC,KAAKC,SAAL,CAAejH,MAAM6G,CAAN,CAAf,CAAZ;QACID,KAAKG,GAAL,CAAJ,EAAe;aACN,KAAP;;;SAGGA,GAAL,IAAY,IAAZ;;;SAGK,IAAP;;;AC3BF;;;;;;;;;;;;;;;AAeA,AAAe,SAASG,gBAAT,GAAuC;MAAbC,MAAa,uEAAJ,EAAI;;MAC9CC,oBACD5G,eAAe2G,MAAf,CADC,EAEDA,MAFC,CAAN;;SAKOE,gBAAP,CAAwBD,IAAxB,EAA8B;aACnB;aACA,SAASE,OAAT,GAAmB;eACjB,CAAC,KAAKC,SAAL,EAAR;;KAHwB;eAMjB;aACF,SAASA,SAAT,GAAqB;YACpB/H,OAAOd,OAAOc,IAAP,CAAY4H,IAAZ,CAAb;;eAEO5H,KAAKmC,IAAL,CAAU,eAAO;cAClByF,KAAKL,GAAL,EAAUQ,SAAd,EAAyB;mBAChBH,KAAKL,GAAL,EAAUQ,SAAV,EAAP;;;iBAGKH,KAAKL,GAAL,CAAP;SALK,CAAP;;KAVwB;sBAmBV;aACT,SAASS,gBAAT,GAAoC;0CAAPf,KAAO;eAAA;;;YACnCjH,OAAOd,OAAOc,IAAP,CAAY4H,IAAZ,CAAb;;eAEO5H,KAAKmC,IAAL,CAAU,eAAO;cAClB8E,MAAM3G,OAAN,CAAciH,GAAd,MAAuB,CAAC,CAA5B,EAA+B;mBACtB,IAAP;;;cAGEK,KAAKL,GAAL,EAAUS,gBAAd,EAAgC;;;mBACvB,kBAAKT,GAAL,GAAUS,gBAAV,kBAA8Bf,KAA9B,CAAP;;;iBAGK,KAAP;SATK,CAAP;;KAvBwB;eAoCjB;aACF,SAASgB,SAAT,CAAmBC,kBAAnB,EAAuC;YACtClI,OAAOd,OAAOc,IAAP,CAAY4H,IAAZ,CAAb;;eAEO5H,KAAKmI,MAAL,CAAY,UAAC/G,MAAD,EAASmG,GAAT,EAAiB;cAC5Ba,YAAYR,KAAKL,GAAL,EAAUU,SAAV,GAAsBL,KAAKL,GAAL,EAAUU,SAAV,CAAoBC,kBAApB,CAAtB,GAAgEN,KAAKL,GAAL,CAAlF;;cAEIrI,OAAOc,IAAP,CAAYoI,SAAZ,EAAuBrI,MAAvB,IAAiCmI,kBAArC,EAAyD;gCAElD9G,MADL,qBAEGmG,GAFH,EAEUa,SAFV;;;iBAMKhH,MAAP;SAVK,EAWJ,EAXI,CAAP;;KAxCwB;oBAsDZ;aACP,SAASiH,cAAT,CAAwBH,kBAAxB,EAA4C;YAC3ClI,OAAOd,OAAOc,IAAP,CAAY4H,IAAZ,CAAb;;eAEO5H,KAAKmI,MAAL,CAAY,UAAC/G,MAAD,EAASmG,GAAT,EAAce,KAAd,EAAwB;cACnCF,YAAYR,KAAKL,GAAL,EAAUc,cAAV,GAA2BT,KAAKL,GAAL,EAAUc,cAAV,CAAyBH,kBAAzB,CAA3B,GAA0EN,KAAKL,GAAL,CAA5F;;cAEI,CAAC9H,SAAS2B,MAAT,CAAD,IAAqB9B,SAASsI,KAAKL,GAAL,CAAT,CAArB,KAA6CrI,OAAOc,IAAP,CAAYoI,SAAZ,EAAuBrI,MAAvB,IAAiCmI,kBAA9E,CAAJ,EAAuG;gCAEhG9G,MADL,qBAEGmG,GAFH,EAEUa,SAFV;;;iBAMKE,UAAU,CAAV,GAAcF,SAAd,GAA0BhH,MAAjC;SAVK,EAWJ,EAXI,CAAP;;KA1DwB;sBAwEV;aACT,SAASmH,gBAAT,CAA0BL,kBAA1B,EAA8C;YAC7ClI,OAAOd,OAAOc,IAAP,CAAY4H,IAAZ,CAAb;;eAEO5H,KAAKwC,GAAL,CAAS,UAAC+E,GAAD,EAAS;cACjBa,YAAYR,KAAKL,GAAL,EAAUgB,gBAAV,GAA6BX,KAAKL,GAAL,EAAUgB,gBAAV,CAA2BL,kBAA3B,CAA7B,GAA8EN,KAAKL,GAAL,CAAhG;;cAEIa,UAAUrI,MAAV,IAAoBmI,kBAAxB,EAA4C;mBACnCE,SAAP;;;iBAGK,IAAP;SAPK,EAQJ,EARI,EAQAI,MARA,CAQO;iBAAS,CAAC,CAACC,KAAX;SARP,CAAP;;KA5EwB;mBAuFb;aACN,SAASC,aAAT,GAAmC;2CAATC,OAAS;iBAAA;;;eACjC,CAAC,KAAKJ,gBAAL,CAAsBI,OAAtB,KAAkC,EAAnC,EAAuC,CAAvC,CAAP;;;GAzFN;;SA8FOf,IAAP;;;ACnGF;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2BA,AAAO,SAASgB,UAAT,CAAkBC,MAAlB,EAA0BC,QAA1B,EAAoC;SAClCC,iBAAiBtH,SAAjB,EAA4BqH,QAA5B,EAAsCD,MAAtC,CAAP;;;;;;;;;;;;AAYF,AAAO,SAASG,YAAT,CAAsBH,MAAtB,EAA8BC,QAA9B,EAAwC;MACvCjH,UAAU+G,WAASC,MAAT,EAAiBC,QAAjB,CAAhB;;SAEOjH,WAAWA,QAAQrB,KAA1B;;;;;;;;;;AAUF,AAAO,SAASyI,cAAT,CAAwBjK,GAAxB,EAA6B6J,MAA7B,EAAqD;MAAhBK,SAAgB,uEAAJ,EAAI;;MACpDlJ,OAAOd,OAAOc,IAAP,CAAY6I,MAAZ,CAAb;MACM5G,WAAWjC,KAAKwC,GAAL,CAAS;WAAYuG,iBAAiBlG,QAAjB,EAA2B7D,GAA3B,EAAgC6J,MAAhC,EAAwCK,SAAxC,CAAZ;GAAT,CAAjB;;SAEOlH,eAAeC,QAAf,EACJH,IADI,CACC,mBAAW;QACX6F,SAAS,EAAb;;YAEQwB,OAAR,CAAgB,UAAC/H,MAAD,EAASiG,CAAT,EAAe;aACtBrH,KAAKqH,CAAL,CAAP,IAAkBjG,MAAlB;KADF;;WAIO,IAAIsG,gBAAJ,CAAqBC,MAArB,CAAP;GARG,CAAP;;;;;;;;;;AAmBF,AAAO,SAASyB,kBAAT,CAA4BpK,GAA5B,EAAiC6J,MAAjC,EAAyCK,SAAzC,EAAoD;MACnDrH,UAAUoH,eAAejK,GAAf,EAAoB6J,MAApB,EAA4BK,SAA5B,CAAhB;;SAEOrH,WAAWA,QAAQrB,KAA1B;;;;;;;;;;AAUF,AAAO,SAAS6I,aAAT,CAAuB9I,KAAvB,EAA8BsI,MAA9B,EAAsD;MAAhBK,SAAgB,uEAAJ,EAAI;;MACrDjH,WAAW,CAAC1B,SAAS,EAAV,EAAciC,GAAd,CAAkB;WAAQyG,eAAeK,IAAf,EAAqBT,MAArB,EAA6BK,SAA7B,CAAR;GAAlB,CAAjB;;SAEOlH,eAAeC,QAAf,EACJH,IADI,CACC,mBAAW;QACX6F,SAAS,EAAb;;YAEQwB,OAAR,CAAgB,UAAC/H,MAAD,EAASiG,CAAT,EAAe;aACtBA,CAAP,IAAYjG,MAAZ;KADF;;WAIO,IAAIsG,gBAAJ,CAAqBC,MAArB,CAAP;GARG,CAAP;;;;;;;;;;AAmBF,AAAO,SAAS4B,iBAAT,CAA2BhJ,KAA3B,EAAkCsI,MAAlC,EAA0CK,SAA1C,EAAqD;MACpDrH,UAAUwH,cAAc9I,KAAd,EAAqBsI,MAArB,EAA6BK,SAA7B,CAAhB;;SAEOrH,WAAWA,QAAQrB,KAA1B;;;;;;;;;;;AAWF,AAAO,SAASuI,gBAAT,CAA0BlG,QAA1B,EAAoC7D,GAApC,EAAsE;MAA7B6J,MAA6B,uEAApB,EAAoB;MAAhBK,SAAgB,uEAAJ,EAAI;;MACrEM,gBAAgBvI,YAAY4H,MAAZ,EAAoBhG,QAApB,EAA8B,EAA9B,CAAtB;MAEE4G,WAHyE,GAQvED,aARuE,CAGzEC,WAHyE;MAIlEC,aAJkE,GAQvEF,aARuE,CAIzEG,KAJyE;8BAQvEH,aARuE,CAKzEI,QALyE;MAK/DC,gBAL+D,yCAK5C,EAL4C;8BAQvEL,aARuE,CAMzEN,SANyE;MAM9DY,iBAN8D,yCAM1C,EAN0C;MAO7DC,kBAP6D,GAQvEP,aARuE,CAOzEQ,UAPyE;yBAavEd,SAbuE,CAWzES,KAXyE;MAWlEM,eAXkE,oCAWhD,EAXgD;4BAavEf,SAbuE,CAYzEU,QAZyE;MAY/DM,kBAZ+D,uCAY1C,EAZ0C;;;MAevE,CAACR,aAAD,IAAkB,CAACK,kBAAvB,EAA2C;QACnCI,eAAejL,OAAOc,IAAP,CAAYwJ,aAAZ,CAArB;QACMY,kBAAkBD,aAAahI,IAAb,CAAkB;aACxCsC,QAAQ8C,GAAR,KACG5G,eAAesJ,eAAf,EAAgC1C,GAAhC,CADH,IAEG/H,WAAWgK,cAAcjC,GAAd,CAAX,CAHqC;KAAlB,CAAxB;;QAMI6C,eAAJ,EAAqB;sBACHZ,aAAhB;;;;MAIA,CAACE,aAAD,IAAkB,CAACK,kBAAvB,EAA2C;yBACpBP,aAArB;;;MAGE,CAACE,aAAL,EAAoB;oBACF,EAAhB;;;MAGE,CAACK,kBAAL,EAAyB;yBACF,EAArB;;;iBAGaD,iBAAf,EAAkCZ,SAAlC;iBACeQ,aAAf,EAA8BO,eAA9B;iBACeJ,gBAAf,EAAiCK,kBAAjC;;MAEM1J,QAAQS,YAAYjC,GAAZ,EAAiB6D,QAAjB,CAAd;;SAEOwH,cAAc7J,KAAd,EAAqBkJ,aAArB,EAAoCG,gBAApC,EAAsD7K,GAAtD,EAA2D6D,QAA3D,EAAqEgG,MAArE,EACJ/G,IADI,CACC,iCAAyB;QACzBiI,kBAAJ,EAAwB;UAChBO,wBAAwB,SAAxBA,qBAAwB,CAACC,mBAAD,EAAyB;uBACtCC,qBAAf,EAAsCD,mBAAtC;;eAEO,IAAI7C,gBAAJ,CAAqB8C,qBAArB,CAAP;OAHF;;UAMIjL,QAAQiB,KAAR,KAAkBiJ,WAAtB,EAAmC;eAC1BJ,cAAc7I,KAAd,EAAqBuJ,kBAArB,EAAyCD,iBAAzC,EACJhI,IADI,CACCwI,qBADD,CAAP;OADF,MAGO;eACErB,eAAezI,KAAf,EAAsBuJ,kBAAtB,EAA0CD,iBAA1C,EACJhI,IADI,CACCwI,qBADD,CAAP;;;;WAKG,IAAI5C,gBAAJ,CAAqB8C,qBAArB,CAAP;GAlBG,CAAP;;;;;;;;;;;AA8BF,AAAO,SAASC,oBAAT,CAA8B5H,QAA9B,EAAwC7D,GAAxC,EAA6C6J,MAA7C,EAAqDK,SAArD,EAAgE;MAC/DrH,UAAUkH,iBAAiBlG,QAAjB,EAA2B7D,GAA3B,EAAgC6J,MAAhC,EAAwCK,SAAxC,CAAhB;;SAEOrH,WAAWA,QAAQrB,KAA1B;;;;;;;;;;;;;AAaF,AAAO,SAAS6J,aAAT,CAAuB7J,KAAvB,EAAgF;MAAlDmJ,KAAkD,uEAA1C,EAA0C;MAAtCC,QAAsC,uEAA3B,EAA2B;MAAvB5K,GAAuB;MAAlB6D,QAAkB;MAARgG,MAAQ;;MAC/E7I,OAAOd,OAAOc,IAAP,CAAY2J,KAAZ,CAAb;MACM1H,WAAWjC,KAAKwC,GAAL,CAAS,gBAAQ;QAC1BI,WAAW+G,MAAM7G,IAAN,CAAjB;QACMJ,UAAUkH,SAAS9G,IAAT,CAAhB;;WAEO4H,aAAa5H,IAAb,EAAmBF,QAAnB,EAA6BpC,KAA7B,EAAoCkC,OAApC,EAA6CiH,KAA7C,EAAoDC,QAApD,EAA8D5K,GAA9D,EAAmE6D,QAAnE,EAA6EgG,MAA7E,CAAP;GAJe,CAAjB;;SAOO7G,eAAeC,QAAf,EACJH,IADI,CACC,mBAAW;QACX6F,SAAS,EAAb;;YAEQwB,OAAR,CAAgB,UAAC/H,MAAD,EAASiG,CAAT,EAAe;UACzBjG,MAAJ,EAAY;eACHpB,KAAKqH,CAAL,CAAP,IAAkBjG,MAAlB;;KAFJ;;WAMO,IAAIsG,gBAAJ,CAAqBC,MAArB,CAAP;GAVG,CAAP;;;;;;;;;;;;;AAwBF,AAAO,SAASgD,iBAAT,CAA2BnK,KAA3B,EAAkCmJ,KAAlC,EAAyCC,QAAzC,EAAmD5K,GAAnD,EAAwD6D,QAAxD,EAAkEgG,MAAlE,EAA0E;MACzEhH,UAAUwI,cAAc7J,KAAd,EAAqBmJ,KAArB,EAA4BC,QAA5B,EAAsC5K,GAAtC,EAA2C6D,QAA3C,EAAqDgG,MAArD,CAAhB;;SAEOhH,WAAWA,QAAQrB,KAA1B;;;;;;;;;;;;;;;;AAgBF,AAAO,SAASkK,YAAT,CAAsB5H,IAAtB,EAA4BF,QAA5B,EAAsCpC,KAAtC,EAA6CkC,OAA7C,EAAsDiH,KAAtD,EAA6DC,QAA7D,EAAuE5K,GAAvE,EAA4E6D,QAA5E,EAAsFgG,MAAtF,EAA8F;iBAI/FnE,QAAQ5B,IAAR,CAJ+F;gCAEjG+B,KAFiG;MAE1FD,WAF0F,kCAE5E9F,IAF4E;MAGxF8L,cAHwF,YAGjGlI,OAHiG;;MAM7FmI,iBAAiBlB,UAAUjI,oBAAoBiI,KAApB,EAA2B7G,IAA3B,KAAoC6G,MAAM7G,IAAN,CAA9C,CAAvB;MACMgI,oBAAoBlB,aAAalI,oBAAoBkI,QAApB,EAA8B9G,IAA9B,KAAuC8G,SAAS9G,IAAT,CAApD,CAA1B;;MAEMiI,SAASvL,WAAWqL,cAAX,IAA6BA,cAA7B,GAA8CjG,WAA7D;MACMoG,UAAUF,qBAAqBpI,OAArB,IAAgCkI,cAAhD;;MAEMK,UAAUvK,UAAUkC,QAAV,CAAhB;MACMsI,cAAcD,QAAQzI,GAAR,CAAY;WAAOZ,cAAcmJ,OAAOvK,KAAP,EAAc2K,GAAd,EAAmBnM,GAAnB,EAAwB6D,QAAxB,EAAkCgG,MAAlC,EAA0CjE,WAA1C,CAAd,CAAP;GAAZ,CAApB;;SAEO5C,eAAekJ,WAAf,EACJpJ,IADI,CACC,mBAAW;QACTsJ,iBAAiB7I,QAAQJ,IAAR,CAAa;aAAUf,WAAW,IAArB;KAAb,CAAvB;;QAEI,CAACgK,cAAL,EAAqB;UACbhK,SAASmB,QAAQ8I,IAAR,CAAa;eAAUjK,WAAW,IAArB;OAAb,CAAf;;UAEI3B,SAAS2B,MAAT,CAAJ,EAAsB;eACbA,MAAP;OADF,MAEO,IAAIA,WAAW,IAAf,EAAqB;eACnBqB,cAAcuI,OAAd,EAAuBxK,KAAvB,EAA8ByK,QAAQzJ,IAAR,CAAa,IAAb,CAA9B,EAAkDqB,QAAlD,EAA4D7D,GAA5D,EAAiE8D,IAAjE,CAAP;;;GAVD,CAAP;;;;;;;;;;;;;;;;AA6BF,AAAO,SAASwI,gBAAT,CAA0BxI,IAA1B,EAAgCF,QAAhC,EAA0CpC,KAA1C,EAAiDkC,OAAjD,EAA0DiH,KAA1D,EAAiEC,QAAjE,EAA2E5K,GAA3E,EAAgF6D,QAAhF,EAA0FgG,MAA1F,EAAkG;MACjGhH,UAAU6I,aAAa5H,IAAb,EAAmBF,QAAnB,EAA6BpC,KAA7B,EAAoCkC,OAApC,EAA6CiH,KAA7C,EAAoDC,QAApD,EAA8D5K,GAA9D,EAAmE6D,QAAnE,EAA6EgG,MAA7E,CAAhB;;SAEOhH,WAAWA,QAAQrB,KAA1B;;;AC5UF;;;;;;AAMA,AAAe,SAAS+K,gBAAT,CAA0B1C,MAA1B,EAAkC;OAC1C2C,OAAL,GAAe3C,MAAf;;OAEKD,QAAL,GAAgB,UAAC5J,GAAD;WAAS4J,WAASC,MAAT,EAAiB7J,GAAjB,CAAT;GAAhB;OACKgK,YAAL,GAAoB,UAAChK,GAAD;WAASgK,aAAaH,MAAb,EAAqB7J,GAArB,CAAT;GAApB;OACK+J,gBAAL,GAAwB,UAAClG,QAAD,EAAW7D,GAAX;WAAmB+J,iBAAiBlG,QAAjB,EAA2B7D,GAA3B,EAAgC6J,MAAhC,CAAnB;GAAxB;OACK4B,oBAAL,GAA4B,UAAC5H,QAAD,EAAW7D,GAAX;WAAmByL,qBAAqB5H,QAArB,EAA+B7D,GAA/B,CAAnB;GAA5B;;;ACZF;;;;;;AAMA,AAAO,SAASyM,WAAT,CAAqB5C,MAArB,EAA6B6C,eAA7B,EAA8C;SAC5C,SAASC,aAAT,CAAuBC,OAAvB,EAAgC;QAC/BC,mBAAmB7C,aAAaH,MAAb,EAAqB+C,QAAQpL,KAA7B,CAAzB;;WAEOkL,kBAAkBG,iBAAiBxD,cAAjB,EAAlB,GAAsDwD,iBAAiB5D,SAAjB,EAA7D;GAHF;;;;;;;;;AAaF,AAAO,SAAS6D,gBAAT,CAA0BjD,MAA1B,EAAkC6C,eAAlC,EAAmD;SACjD,SAASK,kBAAT,CAA4BH,OAA5B,EAAqC;WACnChD,WAASC,MAAT,EAAiB+C,QAAQpL,KAAzB,EACJsB,IADI,CACC,4BAAoB;aACjB4J,kBAAkBG,iBAAiBxD,cAAjB,EAAlB,GAAsDwD,iBAAiB5D,SAAjB,EAA7D;KAFG,CAAP;GADF;;;ACrBF;;;;;;AAMA,AAAO,SAAS+D,kBAAT,CAA4BnD,MAA5B,EAAoCoD,SAApC,EAA+C;SAC7C,SAASC,oBAAT,CAA8BC,MAA9B,EAAsC;QACrCN,mBAAmB7C,aAAaH,MAAb,EAAqBsD,MAArB,CAAzB;;WAEOF,YAAYJ,iBAAiB5D,SAAjB,EAAZ,GAA2C4D,iBAAiBxD,cAAjB,EAAlD;GAHF;;;;;;;;;AAaF,AAAO,SAAS+D,uBAAT,CAAiCvD,MAAjC,EAAyCoD,SAAzC,EAAoD;SAClD,SAASI,yBAAT,CAAmCF,MAAnC,EAA2C;WACzCvD,WAASC,MAAT,EAAiBsD,MAAjB,EACJrK,IADI,CACC,4BAAoB;aACjBmK,YAAYJ,iBAAiB5D,SAAjB,EAAZ,GAA2C4D,iBAAiBxD,cAAjB,EAAlD;KAFG,CAAP;GADF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"}